from aiogram import types
from aiogram.dispatcher.filters import Command
from aiogram.types import CallbackQuery
from aiogram.utils.emoji import emojize

from another.request_to_API import post_req_for_add_new_user
from keyboards.callback_data_bot import callback_for_headpage_inline_keyboard
from keyboards.common_keyboards import HEAD_PAGE_INLINE_KEYBOARD, ADMINS_KEYBOARD, INLINE_KEYBOARD_BUTTON_HEADPAGE
from settings.config import DP, BOT, STAFF_ID, MESSAGES_ID_FOR_ITEMS_IN_USERS_BASKET, ADMINS_ID_LST


async def head_page(message: types.Message):
    '''–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –±–æ—Ç–∞, –∫–æ–º–∞–Ω–¥–∞ start, help'''

    user_data = {
        'user_tlg_id': message.from_user.id,
        'user_tlg_name': message.from_user.username
    }
    if message.from_user.first_name:
        user_name = message.from_user.first_name
        user_data['user_name'] = user_name
    response = await post_req_for_add_new_user(user_data)
    if response:
        text_for_message = emojize('ü•∑ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –Ω–∞—à–µ–º Concept Store.  '
                                   '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å - –Ω–∞—à–∞ —Ä–µ–ª–∏–≥–∏—è. HD - –Ω–∞—à –æ–±—Ä–∞–∑ –º—ã—Å–ª–µ–π –∏ —Å—Ç–∏–ª—å –∂–∏–∑–Ω—å. '
                                   '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Ü–≤–µ—Ç - —á–µ—Ä–Ω—ã–π.\n\n'
                                   '–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –æ–¥–µ–∂–¥—É —Å –ø—Ä–∏–Ω—Ç–∞–º–∏ –Ω–∞ —Ç–µ–º—É HD –∏–ª–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–≤–æ—é –∏–¥–µ—é.\n'
                                   'üîª–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤üîª\n'
                                   'üóí–ú–æ–∏ –∑–∞–∫–∞–∑—ã\n'
                                   'üõí–ö–æ—Ä–∑–∏–Ω–∞\n'
                                   'üí¨–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\n\n')
        await message.answer(
            text=text_for_message,
            reply_markup=HEAD_PAGE_INLINE_KEYBOARD
        )
    else:
        await message.answer(
            emojize(':robot: –£ –±–æ—Ç–∞ —á—Ç–æ-—Ç–æ –±–∞—Ä–æ—Ö–ª–∏—Ç...:('
                    '\n:construction_worker: –ú—ã —É–∂–µ —Ä–∞–∑–±–∏—Ä–∞–µ–º—Å—è, '
                    '—Å–∫–æ—Ä–æ –æ–Ω –±—É–¥–µ—Ç –∫–∞–∫ –Ω–æ–≤–µ–Ω—å–∫–∏–π.:OK_hand:'))


async def return_to_head_page(call: CallbackQuery):
    '''–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ'''

    await call.answer(f'{emojize(":robot:")} –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é...')

    # —É–¥–∞–ª—è–µ–º –≤ –¥–∏–∞–ª–æ–≥–µ —Å –±–æ—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    user_messages_in_dict = MESSAGES_ID_FOR_ITEMS_IN_USERS_BASKET.get(call.from_user.id)
    if user_messages_in_dict and isinstance(user_messages_in_dict, list):
        for i_message_id in user_messages_in_dict:
            await BOT.delete_message(chat_id=call.from_user.id, message_id=i_message_id)
        MESSAGES_ID_FOR_ITEMS_IN_USERS_BASKET.pop(call.from_user.id)
        await call.message.delete()

    elif user_messages_in_dict and isinstance(user_messages_in_dict, dict):
        for i_key, i_value in user_messages_in_dict.items():
            if i_key == 'pagination_message':
                await BOT.delete_message(chat_id=call.message.chat.id, message_id=i_value)
                continue
            for j_elem in i_value:
                await BOT.delete_message(chat_id=call.message.chat.id, message_id=j_elem)
        MESSAGES_ID_FOR_ITEMS_IN_USERS_BASKET.pop(call.from_user.id)

    else:
        await BOT.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    text_for_message = emojize(f'ü•∑—Ç—ã –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    new_message = await BOT.send_message(
        chat_id=call.message.chat.id,
        text=text_for_message,
        reply_markup=HEAD_PAGE_INLINE_KEYBOARD
    )

    if call.from_user.id in STAFF_ID:
        await new_message.edit_text(text=f'–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –¥–ª—è –≤–∞—Å –ø–∞—Ä—É –∫–Ω–æ–ø–æ–∫ –≤–¥–æ–≤–µ—Å–æ–∫', reply_markup=ADMINS_KEYBOARD)


async def send_media_id(message: types.Message):
    '''–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ ID –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–≥–æ –±–æ—Ç—É —Ñ–∞–π–ª–∞'''
    print(message)
    if message.from_user.id in ADMINS_ID_LST:
        await BOT.send_message(
            chat_id=message.from_user.id,
            text=f'{message.photo[-1].file_id}'
        )
    # await BOT.send_message(
    #     chat_id=message.from_user.id,
    #     text=f'ID —Ñ–∞–π–ª–∞: {message.photo[-1].file_id}'
    # )


async def about_store(call: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–∞–≥–∞–∑–∏–Ω–µ."""

    text_about_cafe = f'<b>HDmerch Concept Store</b>\n\n' \
                      f'+7 966 070 70 79 –ê—Ä—É–Ω–∏–º–∞\n\n' \
                      f'üìå–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ–º:\n' \
                      f'- –¢—ã –æ—Ñ–æ—Ä–º–ª—è–µ—à—å –∑–∞–∫–∞–∑ –≤ —ç—Ç–æ–º –±–æ—Ç–µ\n' \
                      f'- –ú—ã —Å–≤—è–∑—ã–≤–∞–µ–º—Å—è —Å —Ç–æ–±–æ–π, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑ –∏ –æ–±—Å—É–¥–∏—Ç—å –≤—Å–µ –¥–µ—Ç–∞–ª–∏\n' \
                      f'- –ü–æ—Å–ª–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞, —Ç—ã –æ–ø–ª–∞—á–∏–≤–∞–µ—à—å –∑–∞–∫–∞–∑\n' \
                      f'- –ú—ã –ø–æ—Å—ã–ª–∞–µ–º –∑–∞–∫–∞–∑ (Boxberry, –°–î–≠–ö, –ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏, –ø–æ –ú–æ—Å–∫–≤–µ - –∫—É—Ä—å–µ—Ä)' \
                      f'- –í—ã—Å—ã–ª–∞–µ–º —Ç–µ–±–µ —Ç—Ä–µ–∫ –Ω–æ–º–µ—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è'
    await call.message.edit_text(text=text_about_cafe, reply_markup=INLINE_KEYBOARD_BUTTON_HEADPAGE)


async def size_table(call: CallbackQuery):
    '''–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Ç–∞–±–ª–∏—Ü—ã —Ä–∞–∑–º–µ—Ä–æ–≤'''

    message_for_delete = MESSAGES_ID_FOR_ITEMS_IN_USERS_BASKET.get(call.message.chat.id)
    if message_for_delete:
        for i_message in message_for_delete:
            await BOT.delete_message(
                chat_id=call.message.chat.id,
                message_id=i_message
            )
    await call.message.edit_text(
        text=f'{emojize(":white_exclamation_mark:")}–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å —Ç–∞–±–ª–∏—Ü–µ–π —Ä–∞–∑–º–µ—Ä–æ–≤ –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞.',
        reply_markup=INLINE_KEYBOARD_BUTTON_HEADPAGE
    )
    # AgACAgIAAxkBAAIFxWOgKu1ro2C8BZ1zdH-i5y0FPkE1AAK2xTEbfy0BSX8vfyHN6ReBAQADAgADeQADLAQ - —ç—Ç–æ —Ä–∞–±–æ—á–∏–π
    photo_message_1 = await BOT.send_photo(
        chat_id=call.message.chat.id,
        photo='AgACAgIAAxkBAAIFxWOgKu1ro2C8BZ1zdH-i5y0FPkE1AAK2xTEbfy0BSX8vfyHN6ReBAQADAgADeQADLAQ'
    )
    # AgACAgIAAxkBAAIFx2OgX7UnwXPqOiXeKaPeFch6Bf6HAAKmwzEbfy0JSZBiaa7KYBLJAQADAgADeQADLAQ - –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π
    # AgACAgIAAxkBAAI8jGOgo0oqDAABGrKRGohHw6AMImzKtAACfscxG4ohAUkUCTN3w0PwhgEAAwIAA3gAAywE - —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π
    photo_message_2 = await BOT.send_photo(
        chat_id=call.message.chat.id,
        photo='AgACAgIAAxkBAAIFx2OgX7UnwXPqOiXeKaPeFch6Bf6HAAKmwzEbfy0JSZBiaa7KYBLJAQADAgADeQADLAQ'
    )
    
    MESSAGES_ID_FOR_ITEMS_IN_USERS_BASKET[call.message.chat.id] = [
        photo_message_1.message_id, 
        photo_message_2.message_id
        ]


def register_head_page_handlers():
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤'''

    DP.register_message_handler(head_page, Command(['start', 'home']))
    DP.register_callback_query_handler(return_to_head_page,
                                       callback_for_headpage_inline_keyboard.filter(flag='back_to_head_page'))
    DP.register_callback_query_handler(about_store, callback_for_headpage_inline_keyboard.filter(flag='info'))
    DP.register_message_handler(send_media_id, content_types=types.ContentTypes.PHOTO)
    DP.register_callback_query_handler(size_table, callback_for_headpage_inline_keyboard.filter(flag='size_table'))

